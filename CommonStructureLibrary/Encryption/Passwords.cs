using System;
using System.Collections.Generic;
using System.IO;
using System.Security.Cryptography;

namespace CSL.Encryption
{
    public static class Passwords
    {
        private static readonly RandomNumberGenerator RNG = RandomNumberGenerator.Create();
        public static string RandomPassGen(int length = 16)
        {
            int templen = length/4 + (length %4 > 0?1:0);
            byte[] toReturn = new byte[templen * 3];
            RNG.GetBytes(toReturn);
            return Helpers.WebBase64.Encode(toReturn).Substring(0, length);
        }
        public static string FriendlyPassGen()
        {
            byte[] data = new byte[5];
            RNG.GetBytes(data);
            string word1 = Adjectives[data[0]].Trim();
            string word2 = Adjectives[data[1]].Trim();
            string word3 = Pokemon[data[2]].Trim();
            string word4 = Symbols[data[3] & 0x0F].ToString().Trim();
            byte[] word5bit = new byte[] { (byte)((data[3] & 0xF0) >> 4), data[4] };
            if (BitConverter.IsLittleEndian)
            {
                Array.Reverse(word5bit);
            }
            string word5 = BitConverter.ToUInt16(word5bit, 0).ToString().Trim();
            return word1 + word2 + word3 + word4 + word5;
        }
        public static string FriendlyPassPhrase40Bit()
        {
            byte[] data = new byte[5];
            RNG.GetBytes(data);
            string[] words = new string[5];
            words[0] = Adjectives[data[0]].Trim();
            words[1] = Pokemon[data[1]].Trim();
            words[2] = Verbs[data[2]].Trim();
            words[3] = Adjectives[data[3]].Trim();
            words[4] = Pokemon[data[4]].Trim();
            return string.Join("", words);
        }
        public static string FriendlyPassPhrase56Bit()
        {
            byte[] data = new byte[7];
            RNG.GetBytes(data);
            string[] words = new string[7];
            words[0] = Adjectives[data[0]].Trim();
            words[1] = Adjectives[data[1]].Trim();
            words[2] = Pokemon[data[2]].Trim();
            words[3] = Verbs[data[3]].Trim();
            words[4] = Adjectives[data[4]].Trim();
            words[5] = Adjectives[data[5]].Trim();
            words[6] = Pokemon[data[6]].Trim();
            return string.Join("", words).Trim();
        }
        public static string ThreeLetterWordPassword(int NumberOfWords)
        {
            byte[] data = new byte[NumberOfWords];
            RNG.GetBytes(data);
            string[] words = new string[NumberOfWords];
            for(int i = 0; i < NumberOfWords; i++)
            {
                words[i] = ThreeLetters[data[i]];
            }
            return string.Join("", words);
        }
        public static readonly string[] Adjectives = File.ReadAllLines("./Words/Adjectives.txt");

        public static readonly string[] Pokemon = new string[]
        {
            "Bulbasaur",
            "Ivysaur",
            "Venusaur",
            "Charmander",
            "Charmeleon",
            "Charizard",
            "Squirtle",
            "Wartortle",
            "Blastoise",
            "Caterpie",
            "Metapod",
            "Butterfree",
            "Weedle",
            "Kakuna",
            "Beedrill",
            "Pidgey",
            "Pidgeotto",
            "Pidgeot",
            "Rattata",
            "Raticate",
            "Spearow",
            "Fearow",
            "Ekans",
            "Arbok",
            "Pikachu",
            "Raichu",
            "Sandshrew",
            "Sandslash",
            "Nidoran",
            "Nidorina",
            "Nidoqueen",
            "Nidorino",
            "Nidoking",
            "Clefairy",
            "Clefable",
            "Vulpix",
            "Ninetales",
            "Jigglypuff",
            "Wigglytuff",
            "Zubat",
            "Golbat",
            "Oddish",
            "Gloom",
            "Vileplume",
            "Paras",
            "Parasect",
            "Venonat",
            "Venomoth",
            "Diglett",
            "Dugtrio",
            "Meowth",
            "Persian",
            "Psyduck",
            "Golduck",
            "Mankey",
            "Primeape",
            "Growlithe",
            "Arcanine",
            "Poliwag",
            "Poliwhirl",
            "Poliwrath",
            "Abra",
            "Kadabra",
            "Alakazam",
            "Machop",
            "Machoke",
            "Machamp",
            "Bellsprout",
            "Weepinbell",
            "Victreebel",
            "Tentacool",
            "Tentacruel",
            "Geodude",
            "Graveler",
            "Golem",
            "Ponyta",
            "Rapidash",
            "Slowpoke",
            "Slowbro",
            "Magnemite",
            "Magneton",
            "Doduo",
            "Dodrio",
            "Seel",
            "Dewgong",
            "Grimer",
            "Muk",
            "Shellder",
            "Cloyster",
            "Gastly",
            "Haunter",
            "Gengar",
            "Onix",
            "Drowzee",
            "Hypno",
            "Krabby",
            "Kingler",
            "Voltorb",
            "Electrode",
            "Exeggcute",
            "Exeggutor",
            "Cubone",
            "Marowak",
            "Hitmonlee",
            "Hitmonchan",
            "Lickitung",
            "Koffing",
            "Weezing",
            "Rhyhorn",
            "Rhydon",
            "Chansey",
            "Tangela",
            "Kangaskhan",
            "Horsea",
            "Seadra",
            "Goldeen",
            "Seaking",
            "Staryu",
            "Starmie",
            "Scyther",
            "Jynx",
            "Electabuzz",
            "Magmar",
            "Pinsir",
            "Tauros",
            "Magikarp",
            "Gyarados",
            "Lapras",
            "Ditto",
            "Eevee",
            "Vaporeon",
            "Jolteon",
            "Flareon",
            "Porygon",
            "Omanyte",
            "Omastar",
            "Kabuto",
            "Kabutops",
            "Aerodactyl",
            "Snorlax",
            "Articuno",
            "Zapdos",
            "Moltres",
            "Dratini",
            "Dragonair",
            "Dragonite",
            "Mewtwo",
            "Mew",
            "Chikorita",
            "Bayleef",
            "Meganium",
            "Cyndaquil",
            "Quilava",
            "Typhlosion",
            "Totodile",
            "Croconaw",
            "Feraligatr",
            "Sentret",
            "Furret",
            "Hoothoot",
            "Noctowl",
            "Ledyba",
            "Ledian",
            "Spinarak",
            "Ariados",
            "Crobat",
            "Chinchou",
            "Lanturn",
            "Pichu",
            "Cleffa",
            "Igglybuff",
            "Togepi",
            "Togetic",
            "Natu",
            "Xatu",
            "Mareep",
            "Flaaffy",
            "Ampharos",
            "Bellossom",
            "Marill",
            "Azumarill",
            "Sudowoodo",
            "Politoed",
            "Hoppip",
            "Skiploom",
            "Jumpluff",
            "Aipom",
            "Sunkern",
            "Sunflora",
            "Yanma",
            "Wooper",
            "Quagsire",
            "Espeon",
            "Umbreon",
            "Murkrow",
            "Slowking",
            "Misdreavus",
            "Unown",
            "Wobbuffet",
            "Girafarig",
            "Pineco",
            "Forretress",
            "Dunsparce",
            "Gligar",
            "Steelix",
            "Snubbull",
            "Granbull",
            "Qwilfish",
            "Scizor",
            "Shuckle",
            "Heracross",
            "Sneasel",
            "Teddiursa",
            "Ursaring",
            "Slugma",
            "Magcargo",
            "Swinub",
            "Piloswine",
            "Corsola",
            "Remoraid",
            "Octillery",
            "Delibird",
            "Mantine",
            "Skarmory",
            "Houndour",
            "Houndoom",
            "Kingdra",
            "Phanpy",
            "Donphan",
            "Stantler",
            "Smeargle",
            "Tyrogue",
            "Hitmontop",
            "Smoochum",
            "Elekid",
            "Magby",
            "Miltank",
            "Blissey",
            "Raikou",
            "Entei",
            "Suicune",
            "Larvitar",
            "Pupitar",
            "Tyranitar",
            "Lugia",
            "Celebi",
            "Regirock",
            "Regice",
            "Registeel",
            "Latias",
            "Latios",
            "Kyogre",
            "Groudon",
            "Rayquaza",
            "Jirachi",
            "Deoxys"
        };
        public static readonly string[] Verbs = new string[]
        {
            "Accepts",
            "Accepted",
            "Admires",
            "Admired",
            "Adopts",
            "Adopted",
            "Advises",
            "Advised",
            "Announces",
            "Announced",
            "Appreciates",
            "Appreciated",
            "Assists",
            "Assisted",
            "Attacks",
            "Attacked",
            "Bakes",
            "Baked",
            "Beats",
            "Beat",
            "Becomes",
            "Became",
            "Befriends",
            "Befriended",
            "Boils",
            "Boiled",
            "Borrows",
            "Borrowed",
            "Brings",
            "Brought",
            "Builds",
            "Built",
            "Buries",
            "Buried",
            "Burns",
            "Burned",
            "Buys",
            "Bought",
            "Calls",
            "Called",
            "Catches",
            "Caught",
            "Challenges",
            "Challenged",
            "Changes",
            "Changed",
            "Cheats",
            "Cheated",
            "Chooses",
            "Chose",
            "Claps",
            "Clapped",
            "Cleans",
            "Cleaned",
            "Collects",
            "Collected",
            "Confuses",
            "Confused",
            "Controls",
            "Controlled",
            "Copies",
            "Copied",
            "Counts",
            "Counted",
            "Creates",
            "Created",
            "Damages",
            "Damaged",
            "Defeats",
            "Defeated",
            "Delivers",
            "Delivered",
            "Destroys",
            "Destroyed",
            "Discovers",
            "Discovered",
            "Drags",
            "Dragged",
            "Drives",
            "Drove",
            "Drops",
            "Dropped",
            "Eats",
            "Ate",
            "Enables",
            "Enabled",
            "Encourages",
            "Encouraged",
            "Enjoys",
            "Enjoyed",
            "Estimates",
            "Estimated",
            "Expands",
            "Expanded",
            "Explains",
            "Explained",
            "Fears",
            "Feared",
            "Feels",
            "Felt",
            "Fights",
            "Fought",
            "Finds",
            "Found",
            "Follows",
            "Followed",
            "Forgets",
            "Forgot",
            "Forgives",
            "Forgave",
            "Fries",
            "Fried",
            "Gathers",
            "Gathered",
            "Gets",
            "Got",
            "Gives",
            "Gave",
            "Greets",
            "Greeted",
            "Grills",
            "Grilled",
            "Grows",
            "Grew",
            "Guesses",
            "Guessed",
            "Harasses",
            "Harassed",
            "Hates",
            "Hated",
            "Hears",
            "Heard",
            "Helps",
            "Helped",
            "Hits",
            "Hit",
            "Honors",
            "Honored",
            "Identifies",
            "Identified",
            "Illuminates",
            "Illuminated",
            "Interrupts",
            "Inturrupted",
            "Introduces",
            "Introduced",
            "Irritates",
            "Irritated",
            "Is",
            "Was",
            "Jumps",
            "Jumped",
            "Keeps",
            "Kept",
            "Kicks",
            "Kicked",
            "Kisses",
            "Kissed",
            "Leaves",
            "Left",
            "Likes",
            "Liked",
            "Loses",
            "Lost",
            "Loves",
            "Loved",
            "Makes",
            "Made",
            "Marries",
            "Married",
            "Measures",
            "Measured",
            "Meets",
            "Met",
            "Mends",
            "Mended",
            "Mimics",
            "Mimicked",
            "Moves",
            "Moved",
            "Murders",
            "Murdered",
            "Needs",
            "Needed",
            "Obeys",
            "Obeyed",
            "Offends",
            "Offended",
            "Opens",
            "Opened",
            "Paints",
            "Painted",
            "Paralyzes",
            "Paralyzed",
            "Pays",
            "Paid",
            "Picks",
            "Picked",
            "Poisons",
            "Poisoned",
            "Praises",
            "Praised",
            "Pulls",
            "Pulled",
            "Punches",
            "Punched",
            "Punishes",
            "Punished",
            "Purchases",
            "Purchased",
            "Purifies",
            "Purified",
            "Pushes",
            "Pushed",
            "Races",
            "Raced",
            "Releases",
            "Released",
            "Remembers",
            "Remembered",
            "Rubs",
            "Rubbed",
            "Sees",
            "Saw",
            "Selects",
            "Selected",
            "Sells",
            "Sold",
            "Sends",
            "Sent",
            "Sings",
            "Sung",
            "Studies",
            "Studied",
            "Sweeps",
            "Swept",
            "Takes",
            "Took",
            "Teaches",
            "Taught",
            "Thanks",
            "Thanked",
            "Trains",
            "Trained",
            "Understands",
            "Understood",
            "Uses",
            "Used",
            "Visits",
            "Visited",
            "Wants",
            "Wanted",
            "Warns",
            "Warned",
            "Weds",
            "Wedded"
        };
        public static readonly string[] ThreeLetters = File.ReadAllText("./Words/ThreeLetterWords.txt").Split(' ');

        public static readonly char[] Symbols = "!@#$%^&*<>=+[]-_".ToCharArray();
    }
}
